name: KMP Library Release
on:
    workflow_call:
        inputs:
            version:
                description: The version name to use in compilation.
                type: string
                required: true

            publish-android:
                description: 'Publish Android Release'
                type: boolean
                required: false
                default: false

            publish-linux-x64:
                description: 'Publish Linux X64'
                type: boolean
                required: false
                default: true
            publish-linux-arm64:
                description: 'Publish Linux Arm64'
                type: boolean
                required: false
                default: true
            publish-android-native-arm32:
                description: 'Publish Android Native Arm32'
                type: boolean
                required: false
                default: true
            publish-android-native-arm64:
                description: 'Publish Android Native Arm64'
                type: boolean
                required: false
                default: true
            publish-android-native-x86:
                description: 'Publish Android Native X86'
                type: boolean
                required: false
                default: true
            publish-android-native-x64:
                description: 'Publish Android Native X64'
                type: boolean
                required: false
                default: true
            publish-js:
                description: 'Publish JavaScript'
                type: boolean
                required: false
                default: true
            publish-jvm:
                description: 'Publish JVM'
                type: boolean
                required: false
                default: true
            publish-mingw-x64:
                description: 'Publish Mingw X64'
                type: boolean
                required: false
                default: true

            publish-macos-x64:
                description: 'Publish MacOS X64'
                type: boolean
                required: false
                default: true
            publish-macos-arm64:
                description: 'Publish MacOS Arm64'
                type: boolean
                required: false
                default: true
            publish-ios-simulator-arm64:
                description: 'Publish iOS Simulator Arm64'
                type: boolean
                required: false
                default: true
            publish-ios-x64:
                description: 'Publish iOS X64'
                type: boolean
                required: false
                default: true
            publish-watchos-simulator-arm64:
                description: 'Publish WatchOS Simulator Arm64'
                type: boolean
                required: false
                default: true
            publish-watchos-x64:
                description: 'Publish WatchOS X64'
                type: boolean
                required: false
                default: true
            publish-watchos-arm32:
                description: 'Publish WatchOS Arm32'
                type: boolean
                required: false
                default: true
            publish-watchos-arm64:
                description: 'Publish WatchOS Arm64'
                type: boolean
                required: false
                default: true
            publish-tvos-simulator-arm64:
                description: 'Publish TVOS Simulator Arm64'
                type: boolean
                required: false
                default: true
            publish-tvos-x64:
                description: 'Publish TVOS X64'
                type: boolean
                required: false
                default: true
            publish-tvos-arm64:
                description: 'Publish TVOS Arm64'
                type: boolean
                required: false
                default: true
            publish-ios-arm64:
                description: 'Publish iOS Arm64'
                type: boolean
                required: false
                default: true
            publish-watchos-device-arm64:
                description: 'Publish WatchOS Device Arm64'
                type: boolean
                required: false
                default: true

            java-version:
                type: string
                required: false
                default: 17

            draft-release:
                type: boolean
                required: false
                default: true
jobs:
    linux:
        runs-on: ubuntu-latest
        steps:
            -
                name: Checkout
                uses: actions/checkout@v4.2.1
            -
                name: Configure Java
                uses: actions/setup-java@v4.5.0
                with:
                    java-version: ${{ inputs.java-version }}
                    distribution: temurin
            -
                name: Configure Gradle Wrapper
                run: echo "GRADLEW_PATH=$(if [ -x ./gradlew ]; then echo './gradlew'; elif [ -x bin/gradlew ]; then echo 'bin/gradlew'; else echo 'gradlew not found'; exit 1; fi)" >> $GITHUB_ENV
            -
                name: Maven Publish
                env:
                    ORG_GRADLE_PROJECT_mavenUser: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
                    ORG_GRADLE_PROJECT_mavenPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
                    ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.PGP_INK_CI_KEYID }}
                    ORG_GRADLE_PROJECT_signingKey: ${{ secrets.PGP_INK_CI_PRIVATE }}
                    ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PGP_INK_CI_PASSWORD }}
                run: >
                    $GRADLEW_PATH
                    publishKotlinMultiplatformPublicationToMavenCentralRepository --no-daemon --no-parallel
                    ${{ inputs.publish-linux-x64 && 'publishLinuxX64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-linux-arm64 && 'publishLinuxArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-android && 'publishAndroidReleasePublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-android && 'publishAndroidDebugPublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-android-native-arm32 && 'publishAndroidNativeArm32PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-android-native-arm64 && 'publishAndroidNativeArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-android-native-x86 && 'publishAndroidNativeX86PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-android-native-x64 && 'publishAndroidNativeX64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-js && 'publishJsPublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-jvm && 'publishJvmPublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-mingw-x64 && 'publishMingwX64PublicationToMavenCentralRepository' || '' }}
                    -Pversion=${{ inputs.version }}
    macos:
        runs-on: macos-latest
        steps:
            -
                name: Checkout
                uses: actions/checkout@v4.2.1
            -
                name: Configure Java
                uses: actions/setup-java@v4.5.0
                with:
                    java-version: ${{ inputs.java-version }}
                    distribution: temurin
            -
                name: Configure Gradle Wrapper
                run: echo "GRADLEW_PATH=$(if [ -x ./gradlew ]; then echo './gradlew'; elif [ -x bin/gradlew ]; then echo 'bin/gradlew'; else echo 'gradlew not found'; exit 1; fi)" >> $GITHUB_ENV
            -
                name: Maven Publish
                env:
                    ORG_GRADLE_PROJECT_mavenUser: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
                    ORG_GRADLE_PROJECT_mavenPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
                    ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.PGP_INK_CI_KEYID }}
                    ORG_GRADLE_PROJECT_signingKey: ${{ secrets.PGP_INK_CI_PRIVATE }}
                    ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PGP_INK_CI_PASSWORD }}
                run: >
                    $GRADLEW_PATH --no-daemon --no-parallel
                    ${{ inputs.publish-macos-x64 && 'publishMacosX64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-macos-arm64 && 'publishMacosArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-ios-simulator-arm64 && 'publishIosSimulatorArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-ios-x64 && 'publishIosX64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-watchos-simulator-arm64 && 'publishWatchosSimulatorArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-watchos-x64 && 'publishWatchosX64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-watchos-arm32 && 'publishWatchosArm32PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-watchos-arm64 && 'publishWatchosArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-tvos-simulator-arm64 && 'publishTvosSimulatorArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-tvos-x64 && 'publishTvosX64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-tvos-arm64 && 'publishTvosArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-ios-arm64 && 'publishIosArm64PublicationToMavenCentralRepository' || '' }}
                    ${{ inputs.publish-watchos-device-arm64 && 'publishWatchosDeviceArm64PublicationToMavenCentralRepository' || '' }}
                    -Pversion=${{ inputs.version }}
    draft-release:
        if: ${{ inputs.draft-release }}
        name: Draft Github Release
        runs-on: ubuntu-latest
        steps:
            -
                name: Checkout
                uses: actions/checkout@v4.2.1
            -
                name: Prepare Changelog Text
                run: mkdir -p build && sed '1,/---/d' CHANGELOG.md | awk '/---/{exit}1' | sed '$d' > build/RELEASE.md
            -
                name: Create Release
                id: create_release
                uses: actions/create-release@v1.1.4
                env:
                      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                      tag_name: ${{ github.ref }}
                      release_name: ${{ github.ref_name }}
                      draft: true
                      prerelease: false
                      body_path: build/RELEASE.md
